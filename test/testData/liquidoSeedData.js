/**
 * <h1>Test data for liquido</h1>
 *
 * update or insert = upsert
 *
 * This is delibaretly a JavaScript module, and not just a JSON dump,
 * so that you can use the full power of your JS interpreter here.
 *
 * Keep in mind that testData is an array and items will be inserted in the order
 * that they appear in the array. So if you reference IDs ('foreign keys'), then
 * make sure that the referenced document was already insereted before.
 */
var bcrypt = require('bcrypt-nodejs');

var testData = [];

//based on http://stackoverflow.com/questions/13838441/javascript-how-to-calculate-the-date-that-is-2-days-ago#13838662
var daysAgo = function(nDays) {
  var daysAgo = new Date();
  daysAgo.setDate(daysAgo.getDate() - nDays);
  return daysAgo;
};

// test users
for(var i = 0; i<=5; i++) {
  var hashedPwd = bcrypt.hashSync("nopass");
  testData.push({
    collection: 'users',
    query:  {email: 'testuser'+i+'@liquido.de'},
    update: {
      email: 'testuser'+i+'@liquido.de',
      passwordHash: hashedPwd,
      profile: {
        name: 'Test User'+i,
        website: 'http://www.liquido.de',
        picture: 'http://www.avatar.org/img'+i+'.png'
      },
      createdAt: daysAgo(20-i),
      updatedAt: daysAgo(19-i)
    }
  });
}


//create test areas
for (var i = 0; i < 5; i++) {
  testData.push({
    collection: 'areas',
    query:  { title:"Area "+i },
    update: {
      title:"Area "+i,
      description:"Department/Area of interest or ministry "+i,
      createdAt: daysAgo(50),
      updatedAt: daysAgo(50)
    }
  });
}


/**
 * Delegations between users (from delegee to proxy)
 * Since the delegations collection only consists of foreign key references this is a bit more complicated
 */
var delegations = {
  "Area 1": [[0,1], [0,2], [0,3],
             [1,4], [1,5]],
  "Area 2": [[0,1], [0,2]]
}

for(var area in delegations) {
  delegations[area].forEach((deleg) => {
    var fromUserEMail = 'testuser'+deleg[0]+'@liquido.de'
    var toUserEMail   = 'testuser'+deleg[1]+'@liquido.de'
    console.log("Delegation from "+fromUserEMail+" to "+toUserEMail)

    var newDelegation = {
      collection: "delegations",
      query: {
        area: { "$ref": {
          collection: 'areas',
          query: { title: area }
        } },
        from: { "$ref": {
          collection: 'users',
          query: { email: fromUserEMail }
        } },
        to: { "$ref": {
          collection: 'users',
          query: { email: toUserEMail }
        } }
      },
      update: {
        area: { "$ref": {
          collection: 'areas',
          query: { title: area }
        } },
        from: { "$ref": {
          collection: 'users',
          query: { email: fromUserEMail}
        } },
        to: { "$ref": {
          collection: 'users',
          query: { email: toUserEMail }
        } },
        createdAt: daysAgo(10),
        updatedAt: daysAgo(10)
      }
    }
    testData.push(newDelegation)
  })
}


// create test ideas
testData = testData.concat([
  {
    collection: 'ideas',
    query:  { title:"Idea 1" },
    update: {
      title:"Idea 1",
      description:"This is a rather long description for this idea",
      createdBy: {
        "$ref": {
          collection: 'users',
          query: {email: 'testuser1@liquido.de'}
        },
      },
      createdAt: daysAgo(10),
      updatedAt: daysAgo(10)
    }
  },
  {
    collection: 'ideas',
    query:  { title:"Idea 2" },
    update: {
      title:"Idea 2",
      description:"Second idea We need to do this",
      createdBy: {
        "$ref": {
          collection: 'users',
          query: {email: 'testuser2@liquido.de'}
        },
      },
      createdAt: daysAgo(8),
      updatedAt: daysAgo(8)
    }
  },
  {
    collection: 'ideas',
    query:  { title:"Idea 3" },
    update: {
      title:"Idea 3",
      description:"Third idea that may be related to another idea but is even better",
      createdBy: {
        "$ref": {
          collection: 'users',
          query: {email: 'testuser3@liquido.de'}
        },
      },
      createdAt: daysAgo(5),
      updatedAt: daysAgo(1)
    }
  },
]);


// create a lot more ideas
for(var i = 4; i<=51; i++) {
  var ideaTitle = "Idea " + (i < 10 ? "0"+i : i);
  var idea = {
    collection: 'ideas',
    query:  { title: ideaTitle },
    update: {
      title: ideaTitle,
      description:"Just some autogenerated idea with number "+i,
      createdBy: {
        "$ref": {
          collection: 'users',
          query: {email: 'testuser'+(i%5)+'@liquido.de'}
        },
      },
      createdAt: daysAgo(20+i),
      updatedAt: daysAgo(1+i)
    }
  };
  testData.push(idea);
}


// constants
//TODO: move these to a central place
const LAW_PROPOSAL = 0;

// create some (proposals) for a law
testData = testData.concat([
  {
    collection: 'laws',
    query:  {title:"Law 1"  },
    update: {
      title:"Law 1",
      description:"Genious proposal for a law",
      status: LAW_PROPOSAL,
      createdBy: {
        "$ref": {
          collection: 'users',
          query: {email: 'testuser3@liquido.de'}
        },
      },
      createdAt: daysAgo(5),
      updatedAt: daysAgo(1),
    }
  }
]);

/*
// test ballots
testData = testData.concat([
  {
    collection: 'ballots',
    query:  {title:""  },
    update: {
    }
  },
]);
*/
module.exports = testData;